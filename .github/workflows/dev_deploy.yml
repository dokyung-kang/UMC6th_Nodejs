name: Node.js Dev CI/CD

on:
  pull_request:      
    types: [ closed ]
  workflow_dispatch: 

jobs:
  build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'
    
    runs-on: ubuntu-latest  

    strategy:
      matrix:
        node-version: ['20.x']  
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4   

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci   

      - name: Run Build
        run: npm run build 

      - name: Generate deployment package
        run: |
          cp -R .platform dist
          cp package.json dist/package.json
          cp package-lock.json dist/package-lock.json
          cp Procfile dist/Procfile
          cd dist
          zip -r deploy.zip .
      
      - name: Get Zip Inside
        run: zipinfo -1 dist/deploy.zip

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" 

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash 

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{secrets.AWS_ACTION_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_ACTION_SECRET_ACCESS_KEY}}
          application_name: umc-dev
          environment_name: Umc-dev-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}  
          use_existing_version_if_available: true
          region: ap-northeast-2
          deployment_package: dist/deploy.zip
          wait_for_deployment: false  

      - name: Deployed!
        run: echo App deployed to ELB